alias l='ls -1 -v --color --group-directories-first'
alias la='ls -lah -v --color --group-directories-first'
alias ll='ls -lh --color --group-directories-first'
alias ls='ls --color --group-directories-first'
alias grep='grep --color=auto'
alias ...='cd ../../'
alias ....="cd ../../../"
alias .....="cd ../../../../"
alias mkdir='mkdir -p'
alias ffmpeg="ffmpeg -hide_banner "
alias aria2c="aria2c -U'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36'"
alias aria2="aria2c -x16 -s16 -k1M"
alias aria2g="aria2c -x4 -s4 -k1M"
alias aria22="aria2c -x2 -s2 -k1M"
alias apu="sudo apt update"
alias apug="sudo apt -y full-upgrade"
alias api="sudo apt install"
alias apt="sudo apt"
mkd (){
        mkdir -p "${1-"build"}"
        cd "${1-"build"}"
}
test-f(){
  test -f $1
}
cd_(){
        cd_c='cd'
        ${cd_c} "${@}"
        ls --color --group-directories-first
}
alias cd="cd_"
sdmou() {
  if [ -z $1 ]; then
    echo "You have to input name of drive"
    else
      DRIV=`tr '[a-z]' '[A-Z]' <<<$1`
      DIRC=`tr '[A-Z]' '[a-z]' <<<$1`
      if [ ! -d /mnt/${DIRC} ]; then
        sudo mkdir /mnt/$DIRC
      fi
      sudo mount -t drvfs $DRIV: /mnt/$DIRC
      cd /mnt/$DIRC
  fi
}
sdumou() {
  sudo umount /mnt/`\ls /mnt/ | fzf --reverse`
}
yokosen(){
    if [ -n "${TERM}" ];
      then SCREEN_WIDTH=$(tput cols);
      else SCREEN_WIDTH=20;
    fi
    LINEWORD="-"
    if [ -n "$1" ]; then
      LINEWORD="$1"
    fi
    printf -v _hr "%*s" ${SCREEN_WIDTH} && echo ${_hr// /${1-${LINEWORD}}}
}
gic(){
	git clone --depth 1 ${@}
	\cd "$(echo ${@/.git}|awk -F'[ |/]' '{printf "%s\n",$NF}')"
	git submodule update --init
	yokosen
	ls
}
gic_n(){
	git clone ${@}
	\cd "$(echo ${@/.git}|awk -F'[ |/]' '{printf "%s\n",$NF}')"
	git submodule update --init
	yokosen
	ls
}
#ここでbashならこのコマンドを実行する
#こうすればbashでうごかすshellscriptのなかでrcに記述したfunctionが使える(使えないことが判明、ただbashに切り替えたときにこれは意味がある。)。
if [ $0 = bash ]; then
 export -f fd
 export -f yokosen
fi

aria2t() {
    read "URL?URL:"
    aria2c --seed-time 0 "$URL" && \rm *.torrent
}
dmv (){
  if [[ "${2: -1}" == '/' ]]; then
    if [[ ! -d "${2/\/$(basename "${2}")}" ]]; then
      mkdir -p "${2/\/$(basename "${2}")}"
    fi
  else
    if [[ "${2}" == */* ]]; then
      if [[ ! -d "${2/\/$(basename "${2}")}" ]]; then
        mkdir -p "${2/\/$(basename "${2}")}"
      fi
    fi
  fi
  mv "${1}" "${2}"
}
dcp (){
  if [[ "${2: -1}" == '/' ]]; then
    if [[ ! -d "${2/\/$(basename "${2}")}" ]]; then
      mkdir -p "${2/\/$(basename "${2}")}"
    fi
    else
      if [[ "${2}" == */* ]]; then
        if [[ ! -d "${2/\/$(basename "${2}")}" ]]; then
          mkdir -p "${2/\/$(basename "${2}")}"
        fi
      fi
  fi
  cp -r "${1}" "${2}"
}

alias urlt="unrar lt "
alias urx="unrar x "
alias ure="unrar e "
alias unrarlt="unrar lt"
alias unrarx="unrar x"
alias unrare="unrar e"
